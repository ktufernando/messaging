define(["superagent"],function(e){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e;class t{get instance(){return t.instance}set instance(e){t.instance=e}constructor(){t.instance||(t.instance=this),this.CollectionFormatEnum={CSV:",",SSV:" ",TSV:"\t",PIPES:"|",MULTI:"multi"};try{localStorage.setItem("purecloud_local_storage_test","purecloud_local_storage_test"),localStorage.removeItem("purecloud_local_storage_test"),this.hasLocalStorage=!0}catch(e){this.hasLocalStorage=!1}this.setEnvironment("https://api.mypurecloud.com"),this.authentications={"PureCloud OAuth":{type:"oauth2"},"Guest Chat JWT":{type:"apiKey",in:"header",name:"Authorization",apiKeyPrefix:"Bearer"}},this.defaultHeaders={},this.timeout=16e3,this.authData={},this.settingsPrefix="purecloud",this.superagent=e,"undefined"!=typeof window&&(window.ApiClient=this)}setDebugLog(e,t){this.debugLog=e,this.debugLogMaxLines=t&&t>0?t:void 0}setReturnExtendedResponses(e){this.returnExtended=e}setPersistSettings(e,t){this.persistSettings=e,this.settingsPrefix=t?t.replace(/\W+/g,"_"):"purecloud",this._debugTrace(`this.settingsPrefix=${this.settingsPrefix}`)}_saveSettings(e){try{if(e.apiKey&&(this.authData.apiKey=e.apiKey,this.authentications["Guest Chat JWT"].apiKey=e.apiKey),e.state&&(this.authData.state=e.state),e.tokenExpiryTime&&(this.authData.tokenExpiryTime=e.tokenExpiryTime,this.authData.tokenExpiryTimeString=e.tokenExpiryTimeString),!0!==this.persistSettings)return;if(!this.hasLocalStorage)return void this._debugTrace("Warning: Cannot access local storage. Settings will not be saved.");let t=JSON.parse(JSON.stringify(this.authData));delete t.state,localStorage.setItem(`${this.settingsPrefix}_auth_data`,JSON.stringify(t)),this._debugTrace("Auth data saved to local storage")}catch(e){console.error(e)}}_loadSettings(){if(!0!==this.persistSettings)return;if(!this.hasLocalStorage)return void this._debugTrace("Warning: Cannot access local storage. Settings will not be loaded.");const e=this.authData.state;this.authData=localStorage.getItem(`${this.settingsPrefix}_auth_data`),this.authData?this.authData=JSON.parse(this.authData):this.authData={},this.authData.apiKey&&this.setJwt(this.authData.apiKey),this.authData.state=e}setEnvironment(e){e||(e="mypurecloud.com"),(e=e.replace(/\/+$/,"")).startsWith("https://")&&(e=e.substring(8)),e.startsWith("http://")&&(e=e.substring(7)),e.startsWith("api.")&&(e=e.substring(4)),this.environment=e,this.basePath=`https://api.${e}`,this.authUrl=`https://login.${e}`}_testTokenAccess(){return new Promise((e,t)=>{this._loadSettings(),this.authentications["Guest Chat JWT"].apiKey?this.callApi("/api/v2/authorization/permissions","GET",null,null,null,null,null,["Guest Chat JWT"],["application/json"],["application/json"]).then(()=>{e()}).catch(e=>{this._saveSettings({apiKey:void 0}),t(e)}):t(new Error("Token is not set"))})}setJwt(e){this._saveSettings({apiKey:e})}setStorageKey(e){this.storageKey=e,this.setJwt(this.authentications["Guest Chat JWT"].apiKey)}_buildAuthUrl(e,t){return t||(t={}),Object.keys(t).reduce((e,i)=>t[i]?`${e}&${i}=${t[i]}`:e,`${this.authUrl}/${e}?`)}paramToString(e){return e?e instanceof Date?e.toJSON():e.toString():""}buildUrl(e,t){e.match(/^\//)||(e=`/${e}`);var i=this.basePath+e;return i=i.replace(/\{([\w-]+)\}/g,(e,i)=>{var a;return a=t.hasOwnProperty(i)?this.paramToString(t[i]):e,encodeURIComponent(a)})}isJsonMime(e){return Boolean(e&&e.match(/^application\/json(;.*)?$/i))}jsonPreferredMime(e){for(var t=0;t<e.length;t++)if(this.isJsonMime(e[t]))return e[t];return e[0]}isFileParam(e){return!!("undefined"==typeof window&&"function"==typeof require&&require("fs")&&e instanceof require("fs").ReadStream)||("function"==typeof Buffer&&e instanceof Buffer||("function"==typeof Blob&&e instanceof Blob||"function"==typeof File&&e instanceof File))}normalizeParams(e){var t={};for(var i in e)if(e.hasOwnProperty(i)&&void 0!==e[i]){var a=e[i];this.isFileParam(a)||Array.isArray(a)?t[i]=a:t[i]=this.paramToString(a)}return t}buildCollectionParam(e,t){if(e)switch(t){case"csv":return e.map(this.paramToString).join(",");case"ssv":return e.map(this.paramToString).join(" ");case"tsv":return e.map(this.paramToString).join("\t");case"pipes":return e.map(this.paramToString).join("|");case"multi":return e.map(this.paramToString);default:throw new Error(`Unknown collection format: ${t}`)}}applyAuthToRequest(e,t){console.log("authNames: ",t),console.log("authentications: ",this.authentications),t.forEach(t=>{var i=this.authentications[t];switch(i.type){case"basic":(i.username||i.password)&&e.auth(i.username||"",i.password||"");break;case"apiKey":if(i.apiKey){var a={};i.apiKeyPrefix?a[i.name]=`${i.apiKeyPrefix} ${i.apiKey}`:a[i.name]=i.apiKey,"header"===i.in?e.set(a):e.query(a)}break;case"oauth2":i.accessToken&&e.set({Authorization:`Bearer ${i.accessToken}`});break;default:throw new Error(`Unknown authentication type: ${i.type}`)}})}callApi(t,i,a,s,n,r,o,h,u,l){var c=this.buildUrl(t,a),p=e(i,c);if(this.proxy&&p.proxy&&p.proxy(this.proxy),this.debugLog){var d=`[REQUEST] ${i} ${c}`;a&&Object.keys(a).count>0&&a[Object.keys(a)[0]]&&(d+=`\nPath Params: ${JSON.stringify(a)}`),s&&Object.keys(s).count>0&&s[Object.keys(s)[0]]&&(d+=`\nQuery Params: ${JSON.stringify(s)}`),o&&(d+=`\nnBody: ${JSON.stringify(o)}`),this._debugTrace(d)}this.applyAuthToRequest(p,h),p.query(this.normalizeParams(s)),p.set(this.defaultHeaders).set(this.normalizeParams(n)),p.timeout(this.timeout);var g=this.jsonPreferredMime(u);if(g?p.type(g):p.header["Content-Type"]||p.type("application/json"),"application/x-www-form-urlencoded"===g)p.send(this.normalizeParams(r));else if("multipart/form-data"==g){var m=this.normalizeParams(r);for(var v in m)m.hasOwnProperty(v)&&(this.isFileParam(m[v])?p.attach(v,m[v]):p.field(v,m[v]))}else o&&p.send(o);var b=this.jsonPreferredMime(l);return b&&p.accept(b),new Promise((e,t)=>{p.end((a,s)=>{if(a&&(console.log(a),!s))return console.log("Response object was not defined!"),void t({status:0,statusText:"error",headers:[],body:{},text:"error",error:a});var n=!0===this.returnExtended||a?{status:s.status,statusText:s.statusText,headers:s.headers,body:s.body,text:s.text,error:a}:s.body?s.body:s.text;if(this.debugLog){var r=`[RESPONSE] ${s.status}: ${i} ${c}`;s.headers&&(r+=`\ninin-correlation-id: ${s.headers["inin-correlation-id"]}`),s.body&&(r+=`\nBody: ${JSON.stringify(s.body,null,2)}`),this._debugTrace(r),a&&this._debugTrace(a)}a?t(n):e(n)})})}parseDate(e){return new Date(e.replace(/T/i," "))}_debugTrace(e){if(this.debugLog){if("string"==typeof e){var t="",i=e.split("\n");if(this.debugLogMaxLines&&i.length>this.debugLogMaxLines){for(var a=0;a<this.debugLogMaxLines;a++)t+=`${i[a]}\n`;e=t+="...response truncated..."}}this.debugLog(e)}}}class i{constructor(e){this.apiClient=e||t.instance}deleteWebchatGuestConversationMember(e,t){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling deleteWebchatGuestConversationMember';if(void 0===t||null===t)throw'Missing the required parameter "memberId" when calling deleteWebchatGuestConversationMember';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}","DELETE",{conversationId:e,memberId:t},{},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}getWebchatGuestConversationMediarequest(e,t){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMediarequest';if(void 0===t||null===t)throw'Missing the required parameter "mediaRequestId" when calling getWebchatGuestConversationMediarequest';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/mediarequests/{mediaRequestId}","GET",{conversationId:e,mediaRequestId:t},{},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}getWebchatGuestConversationMediarequests(e){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMediarequests';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/mediarequests","GET",{conversationId:e},{},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}getWebchatGuestConversationMember(e,t){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMember';if(void 0===t||null===t)throw'Missing the required parameter "memberId" when calling getWebchatGuestConversationMember';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}","GET",{conversationId:e,memberId:t},{},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}getWebchatGuestConversationMembers(e,t){if(t=t||{},void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMembers';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/members","GET",{conversationId:e},{pageSize:t.pageSize,pageNumber:t.pageNumber,excludeDisconnectedMembers:t.excludeDisconnectedMembers},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}getWebchatGuestConversationMessage(e,t){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMessage';if(void 0===t||null===t)throw'Missing the required parameter "messageId" when calling getWebchatGuestConversationMessage';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/messages/{messageId}","GET",{conversationId:e,messageId:t},{},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}getWebchatGuestConversationMessages(e,t){if(t=t||{},void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling getWebchatGuestConversationMessages';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/messages","GET",{conversationId:e},{after:t.after,before:t.before,sortOrder:t.sortOrder},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}patchWebchatGuestConversationMediarequest(e,t,i){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling patchWebchatGuestConversationMediarequest';if(void 0===t||null===t)throw'Missing the required parameter "mediaRequestId" when calling patchWebchatGuestConversationMediarequest';if(void 0===i||null===i)throw'Missing the required parameter "body" when calling patchWebchatGuestConversationMediarequest';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/mediarequests/{mediaRequestId}","PATCH",{conversationId:e,mediaRequestId:t},{},{},{},i,["Guest Chat JWT"],["application/json"],["application/json"])}postWebchatGuestConversationMemberMessages(e,t,i){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling postWebchatGuestConversationMemberMessages';if(void 0===t||null===t)throw'Missing the required parameter "memberId" when calling postWebchatGuestConversationMemberMessages';if(void 0===i||null===i)throw'Missing the required parameter "body" when calling postWebchatGuestConversationMemberMessages';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}/messages","POST",{conversationId:e,memberId:t},{},{},{},i,["Guest Chat JWT"],["application/json"],["application/json"])}postWebchatGuestConversationMemberTyping(e,t){if(void 0===e||null===e)throw'Missing the required parameter "conversationId" when calling postWebchatGuestConversationMemberTyping';if(void 0===t||null===t)throw'Missing the required parameter "memberId" when calling postWebchatGuestConversationMemberTyping';return this.apiClient.callApi("/api/v2/webchat/guest/conversations/{conversationId}/members/{memberId}/typing","POST",{conversationId:e,memberId:t},{},{},{},null,["Guest Chat JWT"],["application/json"],["application/json"])}postWebchatGuestConversations(e){if(void 0===e||null===e)throw'Missing the required parameter "body" when calling postWebchatGuestConversations';return this.apiClient.callApi("/api/v2/webchat/guest/conversations","POST",{},{},{},{},e,[],["application/json"],["application/json"])}}return new class{constructor(){this.ApiClient=new t,this.WebChatApi=i}}});